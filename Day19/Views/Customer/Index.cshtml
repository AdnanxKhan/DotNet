@model PagedList.IPagedList<MyApp.Models.Customer>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <button class="btn btn-primary" onclick="location.href='@Url.Action("Create")'">Create New</button>
</p>

@using (Html.BeginForm("Index", "Customer", FormMethod.Get))
{
    <div class="form-group">
        @Html.Label("Search:")
        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control" })
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
}

<table id="customers" class="table">
    <tr>
        <th>
            Customer Name
        </th>
        <th>
            Membership Type
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.CustomerName, "Details", new { id = item.CustomerId })
            </td>
            <td>
                @item.MembershipTypes.MembershipName
            </td>
            <td>
                <button class="btn btn-secondary rounded-2" onclick="location.href='@Url.Action("Edit", new { id = item.CustomerId })'">Edit</button>
                <t />
                <button class="btn btn-danger rounded-2 ml-2" onclick="location.href='@Url.Action("Delete", new { id = item.CustomerId })'">Delete</button>
            </td>
        </tr>
    }

</table>

<div class="pagination-container">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, searchString = ViewBag.SearchString }))
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#customers").DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false
            });
            $(".js-delete").on("click", function () {
                var customerId = $(this).data("customer-id");

                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + customerId,
                            method: "DELETE",
                            success: function () {
                                $(`#customers tr[data-customer-id=${customerId}]`).remove();
                                location.reload();
                            },
                            error: function () {
                                alert("Failed to delete customer.");
                            }
                        });
                    }

                });

            });
        });
    </script>
}

